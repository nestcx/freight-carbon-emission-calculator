// This is the container that contains all the elements within the body
// Essentially this class'es purpose is to wrap everything like the body
// element does, since we don't want to add styles to the body element itself,
// just in case some pages may need radically different styles
.page-container {
  min-height: 100vh;
  position: relative;
  padding-top: $header-height;
  padding-bottom: $header-height;
  width: 100%;

  //background-image: url(../images/fogtrees.jpg);
  //background-color: $color-background;
  //background-attachment: fixed;
}

// The default rules for container type divs. All divs that represent a chunk of the layout should extend this
.container {
  max-width: 100%;
  // position: relative;
  // height: calc(100vh-#{$header-height}); // This should be 100% by default and overridden by other classes

  @include breakpoint-screen-larger-than($breakpoint-mobile) {
    padding: $spacing-medium;
  }
}

// This container is specifically used as container that has text content. This is so that the text
// is easily padded unlike the generic container, where sometimes you may not want to have padding
// applied automatically
.container--text-content {
  @extend .container;
  padding: $spacing-small;

  @include breakpoint-screen-larger-than($breakpoint-mobile) {
    padding: $spacing-default;
  }
}

// This is used for not allowing larger containers to exceed a certain width.
// It will mostly be used for containers containing large blocks of code,
// and enforces the width so the website doesn't stretch too much on larger screens.
// Also does centreing
.--enforce-max-width {
  margin: 0 auto;
  max-width: $dimension-max-app-width;
}

// This is used for when you want to resize container divs so that they don't
// automatically take up all the available width. Instead, its width is enough
// to cover the content inside of it
.--width-equal-to-content {
  @include breakpoint-screen-larger-than($breakpoint-tablet) {
    width: max-content;
  }
}

.bckgrd {
  position: absolute;
  bottom: 0;
  left: 0;
  z-index: -1;
}
